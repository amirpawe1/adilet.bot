import os
import logging
from aiohttp import web
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = 7341098964
SUPPORT_USERNAME = "xe8oz"
CHANNEL_LINK = "https://t.me/+4KdL8SuRDuA4YjZi"

WEBHOOK_HOST = os.getenv("WEBHOOK_HOST", os.getenv("RENDER_EXTERNAL_URL", ""))
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = WEBHOOK_HOST + WEBHOOK_PATH

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø")],
        [KeyboardButton(text="‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ")],
        [KeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞")]
    ],
    resize_keyboard=True
)

back_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∫–∞–Ω–∞–ª–∞ –ê–¥–ª–µ—Ç–∞!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá",
        reply_markup=main_kb
    )

@dp.message(F.text == "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø")
async def pay(message: types.Message):
    await message.answer(
        "üí≥ –¢–∞—Ä–∏—Ñ—ã:\n\n‚Ä¢ 1 –º–µ—Å—è—Ü ‚Äî 5000 —Ç–≥\n‚Ä¢ 3 –º–µ—Å—è—Ü–∞ ‚Äî 12000 —Ç–≥\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ —Å—é–¥–∞ üìé",
        reply_markup=back_kb
    )

@dp.message(F.text == "‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ")
async def about(message: types.Message):
    await message.answer(
        "‚öΩ –ö–∞–Ω–∞–ª —Ç—Ä–µ–Ω–µ—Ä–∞ –ê–¥–ª–µ—Ç–∞ ‚Äî —ç—Ç–æ:\n‚Ä¢ –û–±—É—á–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ —Ñ—É—Ç–±–æ–ª—É\n‚Ä¢ –†–∞–∑–±–æ—Ä —Ç–∞–∫—Ç–∏–∫\n‚Ä¢ –°–æ–≤–µ—Ç—ã –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤\n\n–ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∏ —É–ª—É—á—à–∞–π—Ç–µ –∏–≥—Ä—É!",
        reply_markup=back_kb
    )

@dp.message(F.text == "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support(message: types.Message):
    await message.answer(
        f"‚úâ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @{SUPPORT_USERNAME}",
        reply_markup=back_kb
    )

@dp.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back(message: types.Message):
    await message.answer("‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_kb)

@dp.message(F.document | F.photo)
async def handle_files(message: types.Message):
    if ADMIN_ID:
        await message.forward(ADMIN_ID)
        await message.answer("‚úÖ –ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω—É.")
    else:
        await message.answer("‚ö†Ô∏è ADMIN_ID –Ω–µ –∑–∞–¥–∞–Ω. –°–æ–æ–±—â–∏ –∞–¥–º–∏–Ω—É!")

@dp.message(Command("approve"))
async def approve(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        await message.answer(f"‚úÖ –î–æ—Å—Ç—É–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª:\n{CHANNEL_LINK}")
    else:
        await message.answer("‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)

async def on_shutdown(app):
    await bot.delete_webhook()
    await bot.session.close()

async def handle_health(request):
    return web.Response(text="I'm alive!")

async def webhook_handler(request):
    data = await request.json()
    update = types.Update(**data)
    await dp.feed_update(bot, update)
    return web.Response()

async def main():
    app = web.Application()
    app.router.add_post(WEBHOOK_PATH, webhook_handler)
    app.router.add_get("/", handle_health)
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)
    port = int(os.getenv("PORT", "10000"))
    web.run_app(app, host="0.0.0.0", port=port)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
