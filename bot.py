import asyncio
import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
import time

API_TOKEN = os.getenv("8235029301:AAHtnMztthjduYDGIgxB47Q1OOfnaE8tO20")
ADMIN_ID = int(os.getenv("ADMIN_ID", "7341098964"))

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

user_last_action = {}
ANTI_SPAM_SECONDS = 2

main_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="pay")],
        [InlineKeyboardButton(text="üìå –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ", callback_data="info")],
        [InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")]
    ]
)

back_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]
    ]
)

pay_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="1 –º–µ—Å—è—Ü ‚Äî 4990‚Ç∏", callback_data="pay_1m")],
        [InlineKeyboardButton(text="6 –º–µ—Å—è—Ü–µ–≤ ‚Äî 19990‚Ç∏", callback_data="pay_6m")],
        [InlineKeyboardButton(text="12 –º–µ—Å—è—Ü–µ–≤ ‚Äî 44990‚Ç∏", callback_data="pay_12m")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]
    ]
)

@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    text = (
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ê–¥–∏–ª–µ—Ç–∞ –ö—É–¥–∞–π–±–µ—Ä–≥–µ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∑–∞–∫—Ä—ã—Ç–æ–º –∫–∞–Ω–∞–ª–µ –ë–∞–∑–∞ –∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–µ–≥–æ.\n\n"
        "–ü–æ–¥–ø–∏—Å–∫–∞ –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è 4990‚Ç∏ –∏–ª–∏ 9$, –æ–ø–ª–∞—Ç—É –ø—Ä–∏–Ω–∏–º–∞–µ–º —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Kaspi.kz\n\n"
        "–ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
    )
    await message.answer(text, reply_markup=main_keyboard)

def check_spam(user_id):
    now = time.time()
    last = user_last_action.get(user_id, 0)
    if now - last < ANTI_SPAM_SECONDS:
        return True
    user_last_action[user_id] = now
    return False

@dp.callback_query()
async def handle_callback(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    if check_spam(user_id):
        await callback.answer("–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ! –ü–æ–¥–æ–∂–¥–∏ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥.", show_alert=True)
        return

    if callback.data == "pay":
        text = (
            "üí≥–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª\n"
            "1 –º–µ—Å—è—Ü 4990‚Ç∏\n"
            "6 –º–µ—Å—è—Ü–µ–≤ 19.990‚Ç∏\n"
            "12 –º–µ—Å—è—Ü–µ–≤ 44.990‚Ç∏\n\n"
            "–ù–∏–∂–µ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏, –≤—ã–±–∏—Ä–∞–π –æ–¥–Ω—É –∏–∑ —Ç–µ–±–µ —É–¥–æ–±–Ω—ã—Ö –∏ –ø–æ–¥–∫–ª—é—á–∞–π—Å—èüîù"
        )
        await callback.message.edit_text(text, reply_markup=pay_keyboard)

    elif callback.data == "info":
        text = (
            "‚öΩ –í –∑–∞–∫—Ä—ã—Ç–æ–º –∫–∞–Ω–∞–ª–µ —Ç–µ–±—è –∂–¥—ë—Ç:\n\n"
            "‚Äî –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ñ—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è\n"
            "‚Äî –†–∞–∑–±–æ—Ä—ã –º–∞—Ç—á–µ–π –∏ —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤–∏–¥–µ–æ\n"
            "‚Äî –õ–∏—á–Ω—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n"
            "‚Äî –ê –º–æ–∂–µ—Ç, –∏–º–µ–Ω–Ω–æ —Ç—ã —Å—Ç–∞–Ω–µ—à—å —É—á–µ–Ω–∏–∫–æ–º –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏—è—Ö!\n\n"
            "–ö–∞–Ω–∞–ª ‚Äî —ç—Ç–æ —Ç–≤–æ–π —à–∞–Ω—Å –≤—ã–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!"
        )
        await callback.message.edit_text(text, reply_markup=back_keyboard)

    elif callback.data == "support":
        text = "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞: –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏ —Å—é–¥–∞ üëâ @YourSupportUsername"
        await callback.message.edit_text(text, reply_markup=back_keyboard)

    elif callback.data == "back":
        await callback.message.edit_text(
            "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ê–¥–∏–ª–µ—Ç–∞ –ö—É–¥–∞–π–±–µ—Ä–≥–µ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∑–∞–∫—Ä—ã—Ç–æ–º –∫–∞–Ω–∞–ª–µ –ë–∞–∑–∞ –∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–µ–≥–æ.\n\n"
            "–ü–æ–¥–ø–∏—Å–∫–∞ –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è 4990‚Ç∏ –∏–ª–∏ 9$, –æ–ø–ª–∞—Ç—É –ø—Ä–∏–Ω–∏–º–∞–µ–º —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Kaspi.kz\n\n"
            "–ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
            reply_markup=main_keyboard
        )

    elif callback.data in ["pay_1m", "pay_6m", "pay_12m"]:
        await callback.message.answer(
            "–û—Ç–ø—Ä–∞–≤—å PDF-—Ñ–∞–π–ª —Å —á–µ–∫–æ–º –æ–± –æ–ø–ª–∞—Ç–µ —Å—é–¥–∞, –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –µ–≥–æ. ‚úÖ"
        )

    await callback.answer()

@dp.message(F.document)
async def handle_document(message: types.Message):
    if message.document.mime_type == "application/pdf":
        await bot.send_document(
            ADMIN_ID,
            message.document,
            caption=f"–ß–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.from_user.username or message.from_user.id}"
        )
        await message.answer("‚úÖ –ß–µ–∫ –ø–æ–ª—É—á–µ–Ω! –û–∂–∏–¥–∞–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    else:
        await message.answer("–ü—Ä–∏—à–ª–∏ –∏–º–µ–Ω–Ω–æ PDF —Ñ–∞–π–ª —á–µ–∫–∞!")

@dp.message(Command("approve"))
async def approve_user(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    await message.answer("‚úÖ –î–æ—Å—Ç—É–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
